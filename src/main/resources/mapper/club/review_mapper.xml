<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="ReviewMapper">
  	<!-- 후기 목록 조회(탭, 검색, 페이징) -->
  	<select id="selectReviewList" parameterType="map" resultType="reviewDto">
  		SELECT *
  		FROM (
			SELECT ROWNUM AS RNUM, A.*
			FROM (
				SELECT review_id, category, subcategory, content, author_name, author_id, is_visible, rating, created_at
				FROM review
				WHERE 1 = 1
				<!-- 탭 메뉴: 자동차보험 / 생활보험 -->
				<if test = "category != null and category != ''">
					AND category = #{category}
				</if>
				<!-- 검색조건 : 내용(content) / 작성장(autorname) -->
				<if test="searchType != null and searchKeyword != null and searchKeyword != ''">
					<choose>
						<when test="searchType == 'content'">
							AND content LIKE '%' || #{searchKeyword} || '%'
	                	</when>
	                	<when test="searchType == 'authorName'">
	                    	AND author_name LIKE '%' || #{searchKeyword} || '%'
	                	</when>
	            	</choose>
				</if>
				ORDER BY created_at DESC			
			) A
			WHERE ROWNUM &lt;= #{endRow}
		)
		WHERE RNUM &gt; = #{startRow} 
  	</select>
  	
  	<!-- 후기 전체 개수 조회-->
  	<select id="selectReviewCount" parameterType="map" resultType="int">
  		SELECT COUNT(*)
        FROM review
        WHERE 1 = 1
        <if test="category != null and category != ''">
            AND category = #{category}
        </if>
        <if test="searchType != null and searchKeyword != null and searchKeyword != ''">
        	<choose>
                <when test="searchType == 'content'">
                    AND content LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test="searchType == 'authorName'">
                    AND author_name LIKE '%' || #{searchKeyword} || '%'
                </when>
            </choose>
        </if>
    </select>
    
    <!-- 단건 조회 -->
    <select id="selectReviewById" parameterType="long" resultType="reviewDto">
    	SELECT review_id, category, subcategory, content, author_name, author_id, is_visible, rating, created_at
    	FROM review	
    	WHERE review_id = #{reviewId}
    </select>
    
    <!-- 등록 -->
    <insert id="insertReview" parameterType="reviewDto">
    	INSERT INTO review (
			review_id, category, subcategory, content, author_name, author_id, is_visible, rating, created_at
        ) VALUES (
            SEQ_REVIEW_ID.NEXTVAL,
            #{category}, #{subCategory}, #{content}, #{authorName}, #{authorId}, #{isVisible}, #{rating},
            SYSDATE, SYSDATE
        )
    </insert>

    <!-- 수정 -->
    <update id="updateReview" parameterType="reviewDto">
        UPDATE review
        SET 
            category = #{category},
            subcategory = #{subCategory},
            content = #{content},
            is_visible = #{isVisible},
            rating = #{rating},
            updated_at = SYSDATE
        WHERE review_id = #{reviewId}
    </update>

    <!-- 삭제 -->
    <delete id="deleteReview" parameterType="long">
        DELETE FROM review
        WHERE review_id = #{reviewId}
    </delete>
    
  	
  	
  </mapper>